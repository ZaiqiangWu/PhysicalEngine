cmake_minimum_required(VERSION 3.10)

project(PhysicalEngine)
find_package(ZLIB REQUIRED)
find_package( OpenGL REQUIRED )
include_directories(${ZLIB_INCLUDE_DIRS})
include_directories(${OpenGL_INCLUDE_DIRS})
set(CMAKE_CXX_STANDARD 17)
add_definitions(-DUNICODE -D_UNICODE)
add_definitions(-DPROJECT_DIR="${CMAKE_SOURCE_DIR}")

include_directories(src/include)
include_directories(src/)
include_directories(src/SOIL)
include_directories(external/assimp/include)
include_directories(external/freetype/include)
include_directories(external/assimp)
include_directories(${PROJECT_SOURCE_DIR}/external/delfem2/include)
include_directories(${PROJECT_SOURCE_DIR}/external)
link_directories(${CMAKE_CURRENT_SOURCE_DIR}/lib)

set(source_code src/main.cpp src/shader.cpp)
add_subdirectory(src/SOIL)
add_subdirectory(external/assimp/code)

option(USE_HEADERONLY "USE_DFM2_HEADERONLY" ON)
add_library(cnpy external/cnpy/cnpy.cpp)

add_executable(main ${source_code} )
if(WIN32)
target_link_libraries(main  opengl32.lib glew32s.lib SOILLIB  glfw3.lib assimp ${ZLIB_LIBRARIES} ${OPENDDL_PARSER_LIBRARIES} freetype.lib cnpy)
elseif(UNIX)
target_link_libraries(main  GL GLEW SOILLIB  glfw assimp ${ZLIB_LIBRARIES} ${OPENDDL_PARSER_LIBRARIES} freetype cnpy)
endif()